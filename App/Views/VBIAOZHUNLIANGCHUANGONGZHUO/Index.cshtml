@model Langben.DAL.VBIAOZHUNLIANGCHUANGONGZHUO
@{ Layout = "~/Views/Shared/Index.cshtml"; }
@using Common
@using Models
<div id="divQuery">
    <div class="input_search">
        <div class="input_search-label">
            @Html.LabelFor(model => model.SONGJIANRIQI):
        </div>
        <div class='input_search-field-time'>
            <input type="text" id="SONGJIANRIQIStart_Time" onclick="WdatePicker({ maxDate: '#F{$dp.$D(\'SONGJIANRIQIEnd_Time\');}' })" />
            <span>到</span>
            <input type="text" id="SONGJIANRIQIEnd_Time" onclick="WdatePicker({ minDate: '#F{$dp.$D(\'SONGJIANRIQIStart_Time\');}' })" />
        </div>
    </div>
    <div class="input_search">
        <div class="input_search-label">
            @Html.LabelFor(model => model.JIANDINGRIQI):
        </div>
        <div class='input_search-field-time'>
            <input type="text" id="JIANDINGRIQIStart_Time" onclick="WdatePicker({ maxDate: '#F{$dp.$D(\'JIANDINGRIQIEnd_Time\');}' })" />
            <span>到</span>
            <input type="text" id="JIANDINGRIQIEnd_Time" onclick="WdatePicker({ minDate: '#F{$dp.$D(\'JIANDINGRIQIStart_Time\');}' })" />
        </div>
    </div>
    <div class="input_search">
        <div class="input_search-label">
            @Html.LabelFor(model => model.SONGJIANDANWEI):
        </div>
        <div class="input_search-field">
            <input type='text' id='SONGJIANDANWEI' />
        </div>
    </div>
    <div class="input_search">
        <div class="input_search-label">
            @Html.LabelFor(model => model.BAOGAOSHENPITONGGUORIQI):
        </div>
        <div class='input_search-field-time'>
            <input type="text" id="BAOGAOSHENPITONGGUORIQIStart_Time" onclick="WdatePicker({ maxDate: '#F{$dp.$D(\'BAOGAOSHENPITONGGUORIQIEnd_Time\');}' })" />
            <span>到</span>
            <input type="text" id="BAOGAOSHENPITONGGUORIQIEnd_Time" onclick="WdatePicker({ minDate: '#F{$dp.$D(\'BAOGAOSHENPITONGGUORIQIStart_Time\');}' })" />
        </div>
    </div>
    <div class="input_search">
        <div class="input_search-label">
            @Html.LabelFor(model => model.SHIYANSHI):
        </div>
        <div class="input_search-field">
            @Html.DropDownList("SHIYANSHI", Models.SysFieldModels.GetSysField("UNDERTAKE_LABORATORY", "NAME"), "请选择", new { id = "SHIYANSHI" })
        </div>
    </div>
    <div class="input_search">
        <div class="input_search-label">
            @Html.LabelFor(model => model.TIAOXINGMA):
        </div>
        <div class="input_search-field">
            <input type='text' id='TIAOXINGMA' />
        </div>
    </div>
    <div class="input_search">
        <div class="input_search-label">
            @Html.LabelFor(model => model.JIANDINGXIAOZHUNYUAN):
        </div>
        <div class="input_search-field">
            <input type='text' id='JIANDINGXIAOZHUNYUAN' />
        </div>
    </div>
    <div class="input_search">
        <div class="input_search-label">
            @Html.LabelFor(model => model.QIJUMINGCHENG):
        </div>
        <div class="input_search-field">
            <input type='text' id='QIJUMINGCHENG' />
        </div>
    </div>
    <div class="input_search">
        <div class="input_search-label">
            @Html.LabelFor(model => model.ZHENGSHUHAOLEIBIE):
        </div>
        <div class="input_search-field">
            <input type='text' id='ZHENGSHUHAOLEIBIE' />
        </div>
    </div>
    <div class="input_search">
        <div class="input_search-label">
            @Html.LabelFor(model => model.CHUCHANGBIANHAO):
        </div>
        <div class="input_search-field">
            <input type='text' id='CHUCHANGBIANHAO' />
        </div>
    </div>
    <div class="input_search">
        <div class="input_search-label">
            @Html.LabelFor(model => model.ZHENGSHUDANWEI):
        </div>
        <div class="input_search-field">
            <input type='text' id='ZHENGSHUDANWEI' />
        </div>
    </div>
    <div class="input_search">
        <div class="input_search-label">
            @Html.LabelFor(model => model.QIJUXINGHAO):
        </div>
        <div class="input_search-field">
            <input type='text' id='QIJUXINGHAO' />
        </div>
    </div>
    <div class="input_search">
        <div class="input_search-label">
            @Html.LabelFor(model => model.SHOULIDANWEI):
        </div>
        <div class="input_search-field">
            @Html.DropDownList("SHOULIDANWEI", Models.SysFieldModels.GetSysField("Appliance", "ACCEPT_ORGNIZATION"), "请选择")
        </div>
    </div>



    <div class='input_search' style="padding-top:10px;">
        <a href="#" onclick="flexiQuery()" class="easyui-linkbutton" data-options="iconCls:'icon-search'">
            查 询
        </a>
    </div>
</div>
<br style="clear: both;" />

<script type="text/javascript" language="javascript">
    $(function () {

        $('#flexigridData').datagrid({
            title: '标准量传部工作信息查询&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<strong style="background:#DDFF77;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</strong>绿色为审批通过（小于12天开始）、<strong style="background:#FFFF33;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</strong>黄色为预警（第11天开始）、<strong style="background:#FFFF33;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</strong>黄色为预警（第11天开始）', //列表的标题
            iconCls: 'icon-site',
            width: 'auto',
            height: 'auto',
            //nowrap: false,
            striped: true,
            collapsible: true,
            url: '../VBIAOZHUNLIANGCHUANGONGZHUO/GetData', //获取数据的url
            sortName: 'ID',
            sortOrder: 'desc',
            idField: 'ID',
            rowStyler: function (value, row, index) {
                if (row.ZONGSHIJIAN < 12) {
                    //return 'background-color:#DDFF77;';
                }
                else if (row.ZONGSHIJIAN >= 12 && row.ZONGSHIJIAN <= 14) {
                    //return 'background-color:#FFFF77;';
                }
                else if (row.ZONGSHIJIAN > 14 && row.MOCHONGCHANGSHU=="") {
                    //return 'background-color:#FF88C2;';
                }
            },
            toolbar: [

                 {
                     text: '导出',
                     iconCls: 'icon-print',
                     handler: function () {
                         return flexiExport();
                     }
                 }
            ],
            columns: [[


					{ field: 'ID', title: '@Html.DisplayNameFor(model => model.ID)', width: 22, hidden: true }
					, { field: 'WEITUODANWEI', title: '@Html.DisplayNameFor(model => model.WEITUODANWEI)', width: 100 }
					, { field: 'SUOSHUDANWEI', title: '@Html.DisplayNameFor(model => model.SUOSHUDANWEI)', width: 100 }
					, { field: 'ZHENGSHUDANWEI', title: '@Html.DisplayNameFor(model => model.ZHENGSHUDANWEI)', width: 100 }
					, { field: 'SHOULIDANWEI', title: '@Html.DisplayNameFor(model => model.SHOULIDANWEI)', width: 100 }
					//, { field: 'CHUCHANGRIQI', title: '@Html.DisplayNameFor(model => model.CHUCHANGRIQI)', width: 100 }
					, { field: 'QIJUMINGCHENG', title: '@Html.DisplayNameFor(model => model.QIJUMINGCHENG)', width: 100 }
					, { field: 'SHENGCHANCHANGJIA', title: '@Html.DisplayNameFor(model => model.SHENGCHANCHANGJIA)', width: 100 }
					, { field: 'QIJUXINGHAO', title: '@Html.DisplayNameFor(model => model.QIJUXINGHAO)', width: 100 }
					, { field: 'QIJUGUIGE', title: '@Html.DisplayNameFor(model => model.QIJUGUIGE)', width: 100 }
					, { field: 'CHUCHANGBIANHAO', title: '@Html.DisplayNameFor(model => model.CHUCHANGBIANHAO)', width: 100 }
					, { field: 'SHULIANG', title: '@Html.DisplayNameFor(model => model.SHULIANG)', width: 100 }
					, {
					    field: 'SONGJIANRIQI', title: '@Html.DisplayNameFor(model => model.SONGJIANRIQI)', width: 100, formatter: function (value, row, index) {
					        if (value) {
					            return dateConvert(value);
					        }
					    }
					}
					, { field: 'SONGJIANREN', title: '@Html.DisplayNameFor(model => model.SONGJIANREN)', width: 100 }
					, { field: 'JIESHOUREN', title: '@Html.DisplayNameFor(model => model.JIESHOUREN)', width: 100 }
					, { field: 'SHIYANSHI', title: '@Html.DisplayNameFor(model => model.SHIYANSHI)', width: 100 }
					, {
					    field: 'SHIYANSHIJIESHOUSHIJIAN', title: '@Html.DisplayNameFor(model => model.SHIYANSHIJIESHOUSHIJIAN)', width: 100, formatter: function (value, row, index) {
					        if (value) {
					            return dateConvert(value);
					        }
					    }
					}
					, {
					    field: 'JIANDINGRIQI', title: '@Html.DisplayNameFor(model => model.JIANDINGRIQI)', width: 100, formatter: function (value, row, index) {
					        if (value) {
					            return dateConvert(value);
					        }
					    }
					}
					, { field: 'JIANDINGXIAOZHUNYUAN', title: '@Html.DisplayNameFor(model => model.JIANDINGXIAOZHUNYUAN)', width: 100 }
					, { field: 'HEYANYUAN', title: '@Html.DisplayNameFor(model => model.HEYANYUAN)', width: 100 }
					 					, { field: 'BAOGAOLEIBIE', title: '证书号类别', width: 100 }
					, { field: 'ZHENGSHUBAOGAOBIANHAO', title: '@Html.DisplayNameFor(model => model.ZHENGSHUBAOGAOBIANHAO)', width: 100 }
					, { field: 'ZHENGSHULEIBIE', title: '@Html.DisplayNameFor(model => model.ZHENGSHULEIBIE)', width: 100 }

					, { field: 'SHOUQUANZIZHI', title: '@Html.DisplayNameFor(model => model.SHOUQUANZIZHI)', width: 100 }
					, { field: 'QIJUZHUANGTAI', title: '@Html.DisplayNameFor(model => model.QIJUZHUANGTAI)', width: 100 }
					, {
					    field: 'YOUXIAOQIZHI', title: '@Html.DisplayNameFor(model => model.YOUXIAOQIZHI)', width: 100, width: 100, formatter: function (value, row, index) {
					        if (value) {
					            return dateConvert(value);
					        }
					    }
					}
					, {
					    field: 'BAOGAOSHENPITONGGUORIQI', title: '@Html.DisplayNameFor(model => model.BAOGAOSHENPITONGGUORIQI)', width: 100, width: 100, formatter: function (value, row, index) {
					        if (value) {
					            return dateConvert(value);
					        }
					    }
					}
					, { field: 'MOCHONGCHANGSHU', title: '@Html.DisplayNameFor(model => model.MOCHONGCHANGSHU)', width: 100 }
					, { field: 'SONGJIANYUEDU', title: '@Html.DisplayNameFor(model => model.SONGJIANYUEDU)', width: 100 }
					, { field: 'JIANDINGSHIJIAN', title: '@Html.DisplayNameFor(model => model.JIANDINGSHIJIAN)', width: 100 }
					, { field: 'JIANDINGYUEDU', title: '@Html.DisplayNameFor(model => model.JIANDINGYUEDU)', width: 100 }
					, { field: 'BAOGAOSHIJIAN', title: '@Html.DisplayNameFor(model => model.BAOGAOSHIJIAN)', width: 100 }
					, { field: 'BAOGAOYUEDU', title: '@Html.DisplayNameFor(model => model.BAOGAOYUEDU)', width: 100 }
					, { field: 'GONHZUOSHIJIAN', title: '@Html.DisplayNameFor(model => model.GONHZUOSHIJIAN)', width: 100 }
					, { field: 'ZONGSHIJIAN', title: '@Html.DisplayNameFor(model => model.ZONGSHIJIAN)', width: 100 }
					, { field: 'BEIZHU', title: '@Html.DisplayNameFor(model => model.BEIZHU)', width: 100 }
            ]],
            pagination: true,
            rownumbers: true

        });

        var parent = window.dialogArguments; //获取父页面
        if (parent == "undefined" || parent == null) {
            //    不是在iframe中打开的
        } else {
            //隐藏所有的按钮和分隔符
            $(".l-btn.l-btn-plain").hide();
            $(".datagrid-btn-separator").hide();
            //添加选择按钮
            $('#flexigridData').datagrid("addToolbarItem", [{ "text": "选择", "iconCls": "icon-ok", handler: function () { flexiSelect(); } }]);
        }
    });

    //“查询”按钮，弹出查询框
    function flexiQuery() {

        //将查询条件按照分隔符拼接成字符串
        var search = "";
        $('#divQuery').find(":text,:selected,select,textarea,:hidden,:checked,:password").each(function () {
            if (this.id)
                search = search + this.id + "&" + this.value + "^";
            else
                search = search + this.name + "&" + this.value + "^";
        });
        //执行查询
        $('#flexigridData').datagrid('load', { search: search });
    };

    //“选择”按钮，在其他（与此页面有关联）的页面中，此页面以弹出框的形式出现，选择页面中的数据
    function flexiSelect() {

        var rows = $('#flexigridData').datagrid('getSelections');
        if (rows.length == 0) {
            $.messager.alert('操作提示', '请选择数据!', 'warning');
            return false;
        }

        var arr = [];
        for (var i = 0; i < rows.length; i++) {
            arr.push(rows[i].ID);
        }
        arr.push("^");
        for (var i = 0; i < rows.length; i++) {
            arr.push(rows[i].WEITUODANWEI);
        }
        //主键列和显示列之间用 ^ 分割   每一项用 , 分割
        if (arr.length > 0) {//一条数据和多于一条
            returnParent(arr.join("&")); //每一项用 & 分割
        }
    }
    //导航到查看详细的按钮
    function getView() {

        var arr = $('#flexigridData').datagrid('getSelections');

        if (arr.length == 1) {
            window.location.href = "../VBIAOZHUNLIANGCHUANGONGZHUO/Details/" + arr[0].ID;

        } else {
            $.messager.alert('操作提示', '请选择一条数据!', 'warning');
        }
        return false;
    }

    //“导出”按钮     在6.0版本中修改
    function flexiExport() {

        //将查询条件按照分隔符拼接成字符串
        var search = "";
        $('#divQuery').find(":text,:selected,select,textarea,:hidden,:checked,:password").each(function () {
            if (this.id)
                search = search + this.id + "&" + this.value + "^";
            else
                search = search + this.name + "&" + this.value + "^";
        });


        $.post('../VBIAOZHUNLIANGCHUANGONGZHUO/GetData2',
            {

                sortName: $('#flexigridData').datagrid('options').sortName,
                sortOrder: $('#flexigridData').datagrid('options').sortOrder,
                search: search
            }, function (res) {
                window.location.href = res;


            });
    };
</script>

