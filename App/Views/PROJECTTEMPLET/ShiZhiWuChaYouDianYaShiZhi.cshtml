@model Langben.DAL.PROJECTTEMPLET
@{
    Layout = "~/Views/Shared/TempleOnly.cshtml";
    ViewBag.title = "示值误差-有电压示值-末盘值残余电阻参与运算";
}
@using Common
@using Models
<thead>
    <!--表头-->
    <tr>
        <th  align="center"  rowspan="4">序号</th>
        <th align="center" colspan="3">
            ×：
            <input class="my-textbox input-width" value="" type="text" name="input1" id="input1_t_1_1">
            <select class="my-combobox" name="input1_UNIT"  id="input1_UNIT_t_1_1" readonly="readonly">
            <option value="Ω">Ω</option> 
            </select>  
            残余电阻：
            <input class="my-textbox input-width" value="0" type="text" name="input9" id="input9_t_1_1">
            <select class="my-combobox" name="input9_UNIT" id="input9_UNIT_t_1_1" readonly="readonly">
                <option value="mΩ">mΩ</option>
            </select>
          
        </th>
        <th align="center" colspan="3">
            ×：
            <input class="my-textbox input-width" value="" type="text" name="input2" id="input2_t_1_1">
            <select class="my-combobox" name="input2_UNIT" id="input2_UNIT_t_1_1" readonly="readonly">
                <option value="Ω">Ω</option>
            </select>
            残余电阻：
            <input class="my-textbox input-width" value="0" type="text" name="input10" id="input10_t_1_1">
            <select class="my-combobox" name="input19_UNIT" id="input19_UNIT_t_1_1" readonly="readonly">
                <option value="mΩ">mΩ</option>
            </select>
        </th>
       

    </tr>
    <tr>

        <th align="center" colspan="3">
            检定电流：
            <input class="my-textbox input-width" value="" type="text" name="input3" id="input3_t_1_1">
            <select class="my-combobox" name="input3_UNIT" id="input3_UNIT_t_1_1" readonly="readonly">
                <option value="A" selected="">A</option>
               
            </select>

        </th>
        <th align="center" colspan="3">
            检定电流：
            <input class="my-textbox input-width" value="" type="text" name="input4" id="input4_t_1_1">
            <select class="my-combobox" name="input4_UNIT" id="input4_UNIT_t_1_1" readonly="readonly">
                <option value="A" selected="">A</option>
              
            </select>

        </th>


    </tr>
    <tr>
        <th align="center">
            电压示值

        </th>
       
        <th align="center">
            实际值

        </th>
        <th align="center" rowspan="2">
            误差(%)

        </th>
        <th align="center">
            电压示值

        </th>
        <th align="center">
            实际值

        </th>
        <th align="center" rowspan="2">
            误差(%)

        </th>

    </tr>
    <tr>
        <th align="center">
            (<select class="my-combobox" name="input12_UNIT" id="input12_UNIT_t_1_1">
                <option value="V">V</option>
                <option value="mV">mV</option>
               
            </select>)
        </th>
        <th align="center">
            (<select class="my-combobox" name="input13_UNIT" id="input13_UNIT_t_1_1" readonly="readonly">
                <option value="Ω">Ω</option>
              
            </select>)
        </th>
        <th align="center">
            (<select class="my-combobox" name="input14_UNIT" id="input14_UNIT_t_1_1">
                <option value="V">V</option>
                <option value="mV">mV</option>

            </select>)
        </th>
      
        <th align="center">
           (<select class="my-combobox" name="input6_UNIT" id="input6_UNIT_t_1_1" readonly="readonly">
    <option value="Ω">Ω</option>
   
</select>)
        </th>
    </tr>
</thead>

<tbody id="tbody_moban">
    <!--表体-->

</tbody>
<tfoot>
    <!--表尾-->
    <tr>
        <td colspan="8">
            <input type="hidden" id="hideLiangChengShuLiang" value="0" /> <!--默认量程是0-->
            <a href="javascript:void(0)" class="easyui-linkbutton" data-options="plain:true,iconCls:'icon-add'" id="btnAddLiangCheng">增加行数</a>

        </td>
    </tr>
    <tr>
        <td align="center" colspan="3">
            允许误差(%)
        </td>
        <td align="right">
            ±
        </td>
        <td align="left" >
            <input class="my-textbox input-width" value="" type="text" name="input7" id="input7_t_1_1">

        </td>
        <td align="right">
            ±
        </td>
        <td align="left" >
            <input class="my-textbox input-width" value="" type="text" name="input8" id="input8_t_1_1">

        </td>

    </tr>
</tfoot>
@section JS {
    <script type="text/javascript" language="javascript">
        //一个量程的需要这个方法
        //重写set方法，只准对增加空白行
        //一个量程的需要这个方法
        //重写set方法，只准对增加空白行
        function set(tbodyIndex) {

          //  $('#dlg').dialog('open');//打开弹出框

            $("#hideDangQianTongDao").val(tbodyIndex);
            CreateRow();
        }
        //增加行
        function CreateRow() {


            var hideDangQianTongDao = $("#hideDangQianTongDao").val();//当前操作第几通道
            var LiangChengShuLiang = $("#tongdao_" + hideDangQianTongDao).find("#hideLiangChengShuLiang").val();//某个通道量程数量
            LiangChengShuLiang++;
          //  var txtNumber = $("#txtNumber").val();     //量程值
            var txtPoint = $("#txtPoint").val();     //检测点数
            var txtPointLen = $("#txtPointLen").val(); //小数点位数

            var htmlString = [];
            var rowLength = $("#tbody_" + hideDangQianTongDao + " tr").length;//行号

            var lianChengID = hideDangQianTongDao + "_" + LiangChengShuLiang;//例如：第几个通道_第几个量程



            for (var rowidx = 0; rowidx < txtPoint; rowidx++) {
                rowLength++;
                htmlString.push("<tr rowindex='" + rowLength + "'>");

                var rowspan = 1; //合并单元格行数

                var HangHaoID = lianChengID + "_" + rowLength;//量程ID_第几行
                //计算默认值
                if (rowidx == 0) {
                    //需要合并的列 //量程
                  
                   
                }
                //序号
                htmlString.push(SetTDHtml(rowspan, "RANGE", HangHaoID, rowidx, rowLength.toString(), "", "", "changeValue"));
                //Ui(mV)
                htmlString.push(SetTDHtml(rowspan, "OUTPUTVALUE", HangHaoID, rowidx, "", "", "", "changeValue"));
                //Mi(mΩ)
                htmlString.push(SetTDHtml(rowspan, "READVALUE", HangHaoID, rowidx, "", "", "", "changeValue"));
         
                //∆i(mΩ)
                htmlString.push(SetTDHtml(rowspan, "ACTUALVALUE", HangHaoID, rowidx, "", "", "", ""));
             
                    //开关变差(mΩ)
                htmlString.push(SetTDHtml(rowspan, "SHIJISHUCHUZHI", HangHaoID, rowidx, "", "", "", "changeValue"));
                //平均值
                htmlString.push(SetTDHtml(rowspan, "RELATIVEERROR", HangHaoID, rowidx, "", "", "", "changeValue"));
                //基本误差(%)
                htmlString.push(SetTDHtml(rowspan, "UNCERTAINTYDEGREE", HangHaoID, rowidx, "", "", "", ""));
              
                htmlString.push("</tr>");
            }
            htmlString = htmlString.join("");

            var tagRow = $("#tongdao_" + hideDangQianTongDao).find("#tbody_" + hideDangQianTongDao).append(htmlString);
            $.parser.parse(tagRow);//渲染easyui组建
            $('#dlg').window('close');//关闭弹出框

            $("#tongdao_" + hideDangQianTongDao).find("#hideLiangChengShuLiang").val(LiangChengShuLiang);
        }
        //离开事件，用于计算
        //计算标准值
        function changeValue(obj) {

            jiSuanWuCha(obj, "RANGE", "OUTPUTVALUE", "READVALUE", "ACTUALVALUE", "SHIJISHUCHUZHI", "RELATIVEERROR", "UNCERTAINTYDEGREE");

        }
        //误差
        //obj 自身对象
        //T1 序号
        //T2 Ui(mV)
        //T3 Mi(mΩ)
        //T4 ∆i(mΩ)
        //T5 开关变差(mΩ)
        function jiSuanWuCha(obj, T1, T2, T3, T4, T5, T6, T7) {
            //重新计算当前行
            var name = $(obj).attr("name");
            var id = $(obj).attr("id");
            id = id.substring(id.indexOf('_'));
            var tongdao = id.split('_')[1];
            var liangCheng = id.split('_')[2];
            var rowLength = id.split('_')[3];
            T1 = T1 + id;//改动的地方，误差的列的name值
            T2 = T2 + id;//改动的地方，误差的列的name值
            T3 = T3 + id;//改动的地方，误差的列的name值
            T4 = T4 + id;//有功分量 相对误差(%
            T5 = T5 + id;//改动的地方，参与计算的列的name值
            T6 = T6 + id;//有功分量 相对误差(%
            T7 = T7 + id;//改动的地方，参与计算的列的name值

            var input1 = "input1" + "_" + tongdao + "_1_1";
            var input1Data = $("#" + input1).val();//电阻值
            var input2 = "input2" + "_" + tongdao + "_1_1";
            var input2Data = $("#" + input2).val();//电阻值
            var input7 = "input7" + "_" + tongdao + "_1_1";
            var input7Data = $("#" + input7).val();//允许误差
            var input8 = "input8" + "_" + tongdao + "_1_1";
            var input8Data = $("#" + input8).val();//允许误差



            var T1Data = $(obj).parent().parent().find("#" + T1).val(); //T1 序号
            var T2Data = $(obj).parent().parent().find("#" + T2).val();  //T2 电压示值
            var T3Data = $(obj).parent().parent().find("#" + T3).val();  //T3实际值
            var T4Data = $(obj).parent().parent().find("#" + T4).val();  //T4【误差】
            var T5Data = $(obj).parent().parent().find("#" + T5).val();   //T5电压示值
            var T6Data = $(obj).parent().parent().find("#" + T6).val();  //T4 实际值
            var T7Data = $(obj).parent().parent().find("#" + T7).val();   //T5 【误差】
           
            var r1, r2;
            try { r1 = input7Data.toString().split(".")[1].length+1 } catch (e) { r1 = 1 }
            try { r2 = input8Data.toString().split(".")[1].length + 1 } catch (e) { r2 = 1 }

            var input3 = "input3" + "_" + tongdao + "_1_1";
            var input3Data = $("#" + input3).val();//检定电流
            var input9 = "input9" + "_" + tongdao + "_1_1";
            var input9Data = $("#" + input9).val();//残余电阻平均值

            var input4 = "input4" + "_" + tongdao + "_1_1";
            var input4Data = $("#" + input4).val();//检定电流
            var input10 = "input10" + "_" + tongdao + "_1_1";
            var input10Data = $("#" + input10).val();//残余电阻平均值

            var input12_UNIT = "input12_UNIT" + "_" + tongdao + "_1_1";
            var input12_UNITData = $("#" + input12_UNIT).val();//当电压示值单位为V
            var input14_UNIT = "input14_UNIT" + "_" + tongdao + "_1_1";
            var input14_UNITData = $("#" + input14_UNIT).val();//当电压示值单位为V
            var input9_UNIT = "input9_UNIT" + "_" + tongdao + "_1_1";
            var input9_UNITData = $("#" + input9_UNIT).val();//残余电阻单位
            var input19_UNIT = "input19_UNIT" + "_" + tongdao + "_1_1";
            var input19_UNITData = $("#" + input19_UNIT).val();//残余电阻单位

            var input13_UNIT = "input13_UNIT" + "_" + tongdao + "_1_1";
            var input13_UNITData = $("#" + input13_UNIT).val();//实际电阻单位

            var input6_UNIT = "input6_UNIT" + "_" + tongdao + "_1_1";
            var input6_UNITData = $("#" + input6_UNIT).val();//实际电阻单位

           
            var txtPointLen = $("#mywuchaxiaoshuweishu").val(); //小数点位数
            txtPointLen = parseFloat(txtPointLen);
            	
//            当电压示值单位为V:
//【实际值】=【电压示值】/【检定电流】-【残余电阻平均值】/1000
//            当电压示值单位为mV:
//【实际值】=（【电压示值】/(【检定电流】*1000)-【残余电阻平均值】）/1000
            if (T2Data != "" && input3Data != "" && input9Data != "") {
                T2Data = parseFloat(T2Data);
                input3Data = parseFloat(input3Data);
                input9Data = parseFloat(input9Data);
                var jianfa = 0;
                if (input12_UNITData == "mV") {
                    input3Data =input3Data*1000;
                    var jian1 = accDiv(T2Data, input3Data);
                    var jian2 = accSub(jian1, input9Data / 1000);
                    jianfa =jian2;
                } else {
                  //  input9Data = DanWeiHuanSuan(input13_UNITData, input9_UNITData, input9Data);// toΩ(input9_UNITData, input9Data);
                    var jian1 = accDiv(T2Data, input3Data);
                    var jian2 = input9Data/1000;
                     jianfa = accSub(jian1, jian2);
                }

                var data = zeroFloat(fomatFloat(jianfa, txtPointLen), txtPointLen);
                $(obj).parent().parent().find("#" + T3).val(data);
            }
            var T3Data = $(obj).parent().parent().find("#" + T3).val();  //T3实际值
            if (T5Data != "" && input4Data != "" && input10Data != "") {
                T5Data = parseFloat(T5Data);
                var jianfa = 0;
                input4Data = parseFloat(input4Data);
                if (input14_UNITData == "mV") {
                    input4Data = input4Data*1000;
                    var jian1 = accDiv(T5Data, input4Data);
                    var jian2 = accSub(jian1, input10Data / 1000);
                    jianfa =jian2;
                } else {
                    input10Data = parseFloat(input10Data);
                  //  input10Data = DanWeiHuanSuan(input6_UNITData, input19_UNITData, input10Data);// toΩ(input19_UNITData, input10Data);
                    var jian1 = accDiv(T5Data, input4Data);
                    var jian2 = input10Data/1000;
                    jianfa = accSub(jian1, jian2);
                }
                var data = zeroFloat(fomatFloat(jianfa, txtPointLen), txtPointLen);
                $(obj).parent().parent().find("#" + T6).val(data);
            }
            var T6Data = $(obj).parent().parent().find("#" + T6).val();  //T4 实际值
//【误差】=(【×电阻值】*序号-【实际值】)/【实际值】*100%，比允许误差多一位，四舍六入，逢五奇进偶不进																																																								

            if (input1Data != "" && T1Data != "" && T3Data != "") {
                T1Data = parseFloat(T1Data);
                T3Data = parseFloat(T3Data);
                input1Data = parseFloat(input1Data);
                var jian1= accMul(input1Data, T1Data);
                var jian2 = accSub(jian1, T3Data);
                var jianfa =accDiv(jian2, T3Data)*100;

                var data =zeroFloat( fomatFloat(jianfa, r1),r1);
                $(obj).parent().parent().find("#" + T4).val(data);
            }
            //【误差】=(【×电阻值】*序号-【实际值】)/【实际值】*100%，比允许误差多一位，四舍六入，逢五奇进偶不进																																																								
            if (input2Data != "" && T1Data != "" && T6Data != "") {
                T1Data = parseFloat(T1Data);
                T6Data = parseFloat(T6Data);
                input2Data = parseFloat(input2Data);
                var jian1 = accMul(input2Data, T1Data);
                var jian2 = accSub(jian1, T6Data);
                var jianfa = accDiv(jian2, T6Data)*100;

                var data =zeroFloat( fomatFloat(jianfa, r2),r2);
                $(obj).parent().parent().find("#" + T7).val(data);
            }
        }
        //单位换算
        //最终单位
        //当前单位
        //值
        function DanWeiHuanSuan(lastUnit, unit, value) {
          //  unit = unit.toUpperCase();
           // lastUnit = lastUnit.toUpperCase();
            switch (lastUnit) {
                case "TΩ":
                    result = toTΩ(unit, value);
                    break;
                case "GΩ":
                    result = toGΩ(unit, value);
                    break;
                case "MΩ":
                    result = toMΩ(unit, value);
                    break;
                case "kΩ":
                    result = tokΩ(unit, value);
                    break;
                case "Ω":
                    result = toΩ(unit, value);
                    break;
                case "mΩ":
                    result = tomΩ(unit, value);
                    break;
                case "μΩ":
                    result = toμΩ(unit, value);
                    break;
                default:
                    result = value;
            }
            return result;
        }
        //转换为Ω
        function toTΩ(danwei, value) {
            value = parseFloat(value);
          //  danwei = danwei.toUpperCase();
            var result;
            switch (danwei) {
                case "TΩ":
                    result = value;
                    break;
                case "GΩ":
                    result = value * 0.001;
                    break;
                case "MΩ":
                    result = value * 0.001 * 0.001;
                    break;
                case "kΩ":
                    result = value * 0.001 * 0.001 * 0.001;
                    break;
                case "Ω":
                    result = value * 0.001 * 0.001 * 0.001 * 0.001;
                    break;
                case "mΩ":
                    result = value * 0.001 * 0.001 * 0.001 * 0.001 * 0.001;
                    break;
                case "μΩ":
                    result = value * 0.001 * 0.001 * 0.001 * 0.001 * 0.001 * 0.001;
                    break;
                default:
                    result = value;
            }
            return result;
        }
        //转换为Ω
        function toGΩ(danwei, value) {
            value = parseFloat(value);
          //  danwei = danwei.toUpperCase();
            var result;
            switch (danwei) {
                case "TΩ":
                    result = value * 1000;
                    break;
                case "GΩ":
                    result = value;
                    break;
                case "MΩ":
                    result = value * 0.001;
                    break;
                case "kΩ":
                    result = value * 0.001 * 0.001;
                    break;
                case "Ω":
                    result = value * 0.001 * 0.001 * 0.001;
                    break;
                case "mΩ":
                    result = value * 0.001 * 0.001 * 0.001 * 0.001;
                    break;
                case "μΩ":
                    result = value * 0.001 * 0.001 * 0.001 * 0.001 * 0.001;
                    break;
                default:
                    result = value;
            }
            return result;
        }
        //转换为Ω
        function toMΩ(danwei, value) {
            value = parseFloat(value);
         //   danwei = danwei.toUpperCase();
            var result;
            switch (danwei) {
                case "TΩ":
                    result = value * 1000 * 1000 ;
                    break;
                case "GΩ":
                    result = value * 1000 ;
                    break;
                case "MΩ":
                    result = value;
                    break;
                case "kΩ":
                    result = value * 0.001;
                    break;
                case "Ω":
                    result = value * 0.001 * 0.001;
                    break;
                case "mΩ":
                    result = value * 0.001 * 0.001 * 0.001;
                    break;
                case "μΩ":
                    result = value * 0.001 * 0.001 * 0.001 * 0.001;
                    break;
                default:
                    result = value;
            }
            return result;
        }
        //转换为Ω
        function tokΩ(danwei, value) {
            value = parseFloat(value);
          //  danwei = danwei.toUpperCase();
            var result;
            switch (danwei) {
                case "TΩ":
                    result = value * 1000 * 1000 * 1000;
                    break;
                case "GΩ":
                    result = value*1000*1000;
                    break;
                case "MΩ":
                    result = value * 1000;
                    break;
                case "kΩ":
                    result = value*1000;
                    break;
                case "Ω":
                    result = value * 0.001;
                    break;
                case "mΩ":
                    result = value * 0.000001;
                    break;
                case "μΩ":
                    result = value *0.000000001;
                    break;
                default:
                    result = value;
            }
            return result;
        }
        //转换为Ω
        function toΩ(danwei, value) {
            value = parseFloat(value);
        //    danwei = danwei.toUpperCase();
            var result;
            switch (danwei) {
                case "TΩ":
                    result = value * 1000 * 1000 * 1000 * 1000;
                    break;
                case "GΩ":
                    result = value * 1000 * 1000 * 1000;
                    break;
                case "MΩ":
                    result = value * 1000000;
                    break;
                case "kΩ":
                    result = value * 1000;
                    break;
                case "mΩ":
                    result = value * 0.001;
                    break;
                case "μΩ":
                    result = value * 0.000001;
                    break;
                default:
                    result = value;
            }
            return result;
        }
        //转换为Ω
        function tomΩ(danwei, value) {
            value = parseFloat(value);
        //    danwei = danwei.toUpperCase();
            var result;
            switch (danwei) {
                case "TΩ":
                    result = value * 1000 * 1000 * 1000 * 1000*1000;
                    break;
                case "GΩ":
                    result = value * 1000 * 1000 * 1000*1000;
                    break;
                case "MΩ":
                    result = value * 1000000*1000;
                    break;
                case "kΩ":
                    result = value * 1000*1000;
                    break;
                case "Ω":
                    result = value * 1000;
                    break;
                case "mΩ":
                    result = value;
                    break;
                case "μΩ":
                    result = value * 0.001;
                    break;
                default:
                    result = value;
            }
            return result;
        }
        //转换为μΩ
        function toμΩ(danwei, value) {
            value = parseFloat(value);
         //   danwei = danwei.toUpperCase();
            var result;
            switch (danwei) {
                case "TΩ":
                    result = value * 1000 * 1000 * 1000 * 1000*1000*1000;
                    break;
                case "GΩ":
                    result = value * 1000 * 1000 * 1000*1000*1000;
                    break;
                case "MΩ":
                    result = value * 1000000*1000*1000;
                    break;
                case "kΩ":
                    result = value * 1000*1000*1000;
                    break;
                case "Ω":
                    result = value * 1000 * 1000;
                    break;
                case "mΩ":
                    result = value * 1000;
                    break;
                case "μΩ":
                    result = value;
                    break;
                default:
                    result = value;
            }
            return result;
        }
       																																							

    </script>

<script>
    //方向键控制页面控件焦点移动
    function keyDown(event) {
        var rowspan =0;
        var colunmIdx = "";
        var inputs = $(".my-textbox")                              //通过class属性值获取控件组合
        var focus = document.activeElement;                 //得到处于激活状态的控件
        if (!document.getElementById("tongdao").contains(focus)) return;     //判断是否包含激活控件在指定的Table下
        //if (!$(".tbl").contains(focus)) return;
        var event = window.event || event;                              //获取事件
        var key = event.keyCode;                                        //得到按下的键盘Ascii码
        var flag = -1;

        //得到激活控件在组合中的具体位置
        for (var i = 0; i < inputs.length; i++) {
            if (inputs[i] === focus) {
                // alert(i);
                break;
            }
        }

        switch (key) {

            case 37: //向左键
                if (i > 0) inputs[i - 1].focus();
                break;
            case 38:                //向上键
                var td = $(inputs[i]).parents("td").index();      //当前所在的列数
                var tr = $(inputs[i]).parents("tr");
                var tr_up = $(inputs[i]).parents("tr").prev();      //当前所在的行数的上一行
                if ($(inputs[i]).parents("tr").prev().length >= 1) {   //判断上一行是否还有行
                    var tr_up = $("[rowindex=" + ($(tr).attr("rowindex") - 1) + "]", $(inputs[i]).parents("table")[0])[0];      //当前所在的行数的上一行

                    if ($(tr_up).attr("rowindex") == 1)  //如果是第一行
                        $(tr_up).find("td").eq(td + rowspan).find('input').focus();    //此模板没有有rowspan合并行等,所以如果向上到第一行,td不增减;
                    else {
                        if ($(tr).find("td").length < $(tr_up).find("td").length)
                            $(tr_up).find("td").eq(td + rowspan).find('input').focus();
                        if ($(tr).find("td").length == $(tr_up).find("td").length)
                            $(tr_up).find("td").eq(td).find('input').focus();
                        if ($(tr).find("td").length > $(tr_up).find("td").length)
                            $(tr_up).find("td").eq(td - rowspan).find('input').focus();
                    }
                }
                else {
                    //没有则找上一个table
                    var prevtable = $(inputs[i]).parents("table").prev()[0];

                    var tr_up = $(prevtable).find("tr:eq(" + ($('tr', $(prevtable)).length - 2) + ")");
                    if ($(tr_up).attr("rowindex") == 1)
                        $(tr_up).find('td').eq(td + rowspan).find('input').focus();
                    else
                        $(tr_up).find('td').eq(td).find('input').focus();
                }
                break;
            case 39: //向右键
                if (i < inputs.length - 1) inputs[i + 1].focus();
                break;
            case 40: //向下键
                var td = $(inputs[i]).parents("td").index();      //当前所在的列数
                var tr = $(inputs[i]).parents("tr");
                if ($(inputs[i]).parents("tr").next().length >= 1) {
                    var tr_down = $(inputs[i]).parents("tr").next();      //当前所在的行数的下一行
                    if ($(tr).attr("rowindex") != 1) {
                        if ($(tr).find("td").length < $(tr_down).find("td").length)
                            $(tr_down).find("td").eq(td + rowspan).find('input').focus();
                        if ($(tr).find("td").length == $(tr_down).find("td").length)
                            $(tr_down).find("td").eq(td).find('input').focus();
                        if ($(tr).find("td").length > $(tr_down).find("td").length)
                            $(tr_down).find("td").eq(td - rowspan).find('input').focus();
                    }
                    else
                        $(tr_down).find("td").eq(td - rowspan).find('input').focus();//第一列没有合并行，td数量不变
                }
                else {
                    var table = $(inputs[i]).parents("table").next();
                    var tr = $('[rowindex]', table).eq(0);
                    if ($(tr).attr("rowindex") != 1)
                        $(tr).find('td').eq(td).find('input').focus();
                    else
                        $(tr).find('td').eq(td + rowspan).find('input').focus();
                }
                break;
            case 13:                //回车键
                event.returnValue = false;                          //阻止自动提交
                var j = i + 1;
                var flag = false;
                if (inputs.get(j).disabled == false) {
                    flag = true;
                } else {
                    for (j = i + 4; j <= inputs.length - 1; j = j + 2) {
                        if (inputs.get(j).disabled == false) {
                            flag = true;
                            break;
                        }
                    }
                }
                if (flag) {
                    inputs[j].focus();
                }
                break;
        }
    }
</script>
}
@section TanKuang {
    <!--弹框的位置-->
    <!--增加量程弹层-->
    <div id="dlg" class="easyui-dialog" title="设置检测点" closed="true" data-options="buttons: [{
					text:'确定',
					iconCls:'icon-ok',
					handler:function(){
					  return CreateRow()
					}
				},{
					text:'取消',
					handler:function(){
                    $('#dlg').window('close');
         }
         }]" style="width:400px;height:200px;padding:10px">
        <table>

            <tr>
                <td align="right">检测点数：</td>
                <td><input type="text" id="txtPoint" value="1" name="txtPoint" class="easyui-textbox  required digits" style="width:200px" /></td>
            </tr>
            <tr>
                <td align="right">小数点位数：</td>
                <td><input type="text" id="txtPointLen" value="3" name="txtPointLen" class="easyui-textbox  required digits" value="2" style="width:200px" /></td>
            </tr>
        </table>
    </div>
    <!--/增加量程弹层-->
}



